// Main application class, generated by Spring Initializr.
// Must live in the top package so that @SpringBootApplication annotation
// can find all the components.

package voting_system;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.Bean;
import org.springframework.web.servlet.config.annotation.CorsRegistry;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;
import voting_system.service.VotingService;

/**
 * The entry point class for the system.  Contains some system-wide helper functions and values.
 */
@SpringBootApplication
public class VotingSystemApplication
{

    /**
     * The program entry point.
     *
     * @param args  A String[] array which contains any command line arguments.
     */
    public static void main(String[] args) {
        SpringApplication.run(VotingSystemApplication.class, args);
    }

    /**
     * A simple logging function.  To be disabled during production.
     *
     * @param str   A String to be sent to the command line.
     */
    public static void cLog(String str) {   //todo remove during production.
        //cOut(str);
    }

    /**
     * A simple logging function.
     *
     * @param str   A String to be sent to the command line.
     */
    public static void cOut(String str) {   // This stays in during production.
        System.out.println(str);
    }

    /**
     * A function which allows JSON strings to be formatted with newlines.
     *
     * @param str   A String which is the JSON to be reformatted.
     * @return  A String which is the formatted JSON.
     */
    public static String tidyJson(String str) {
        ObjectMapper mapper = new ObjectMapper().enable(SerializationFeature.INDENT_OUTPUT);
        String json = "";
        try {
            json = mapper.readTree(str).toPrettyString();
        }
        catch (JsonProcessingException e) {
            cLog("ERROR GETTING JSON FROM STRING: " + str);
            cLog("JSON PROCESSING EXCEPTION: " + e);
            e.printStackTrace();
        }
        return json;
    }

    // The initDB() @Bean is run automatically on startup, before the
    // @RestController is started.
    // The body could access command line argument args (but doesn't).
    // The fact that initDB() requires a VotingService argument tells Spring
    // to auto-configure and pass a VotingService instance, which initDB()
    // amends by adding more Welcome instances.
    @Bean
    public CommandLineRunner initDB(VotingService votingService) {
        return (args) -> {};
    }

    @Bean
    public WebMvcConfigurer corsConfigurer() {
        return new WebMvcConfigurer()
        {
            @Override
            public void addCorsMappings(CorsRegistry registry) {
                registry.addMapping("/**").allowedOrigins("*").allowedHeaders("*");
            }
        };
    }
}

